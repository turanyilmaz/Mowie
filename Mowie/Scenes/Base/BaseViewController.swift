//
//  BaseViewController.swift
//  Mowie
//
//  Created by Turan Yilmaz on 29.09.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BaseDisplayLogic: AnyObject {
    func displayErrorAlert(alert: UIAlertController)
}

class BaseViewController: UIViewController, BaseDisplayLogic {
    var baseInteractor: BaseBusinessLogic?
    var baseRouter: (NSObjectProtocol & BaseRoutingLogic & BaseDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = BaseInteractor()
        let presenter = BasePresenter()
        let router = BaseRouter()
        viewController.baseInteractor = interactor
        viewController.baseRouter = router
        interactor.basePresenter = presenter
        presenter.baseViewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    func displayErrorAlert(alert: UIAlertController) {
        present(alert, animated: true, completion: nil)
    }
}
