//
//  ItemDetailRouter.swift
//  Mowie
//
//  Created by Turan Yilmaz on 14.04.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ItemDetailRoutingLogic {
    func routeToCastDetail(with castId: Int, and castName: String)
    func routeToSimilarItemDetail(selectedItem: ItemDetail.SelectedItem?)
    func routeToTrailers()
    func routeToAddToListOptions()
    func routeToWatchProviders()
}

protocol ItemDetailDataPassing {
    var dataStore: ItemDetailDataStore? { get }
}

final class ItemDetailRouter: NSObject, ItemDetailRoutingLogic, ItemDetailDataPassing {
    weak var viewController: ItemDetailViewController?
    var dataStore: ItemDetailDataStore?
    
    // MARK: Routing
    
    func routeToCastDetail(with castId: Int, and castName: String) {
        let destinationVC = CastDetailViewController.instantiateFromStoryboard()
        var destinationDS = destinationVC.router?.dataStore
//        passDataToCastDetail(source: dataStore!, destination: &destinationDS!)
        destinationDS?.selectedCast = CastDetail.SelectedCast(id: castId, name: castName)
        navigateToCastDetail(source: viewController!, destination: destinationVC)
    }
    
    func routeToSimilarItemDetail(selectedItem: ItemDetail.SelectedItem?) {
        let destinationVC = ItemDetailViewController.instantiateFromStoryboard()
        var destinationDS = destinationVC.router?.dataStore
        destinationDS?.selectedItem = selectedItem
        navigateToSimilarItemDetail(source: viewController!, destination: destinationVC)
    }
    
    func routeToTrailers() {
        let destinationVC = TrailersViewController.instantiateFromStoryboard()
        var destinationDS = destinationVC.router?.dataStore
        passDataToTrailers(source: dataStore!, destination: &destinationDS!)
        navigateToTrailers(source: viewController!, destination: destinationVC)
    }
    
    func routeToAddToListOptions() {
        let destinationVC = AddToListViewController.instantiateFromStoryboard()
        var destinationDS = destinationVC.router?.dataStore
        passDataToAddToListOptions(source: dataStore!, destination: &destinationDS!)
        navigateToAddToListOptions(source: viewController!, destination: destinationVC)
    }
    
    func routeToWatchProviders() {
        let destinationVC = WatchProvidersViewController.instantiateFromStoryboard()
        var destinationDS = destinationVC.router?.dataStore
        passDataToWatchProviders(source: dataStore!, destination: &destinationDS!)
        navigateToWatchProviders(source: viewController!, destination: destinationVC)
    }
    
    // MARK: Navigation
    
    func navigateToCastDetail(source: ItemDetailViewController, destination: CastDetailViewController) {
      source.show(destination, sender: nil)
    }
    
    func navigateToSimilarItemDetail(source: ItemDetailViewController, destination: ItemDetailViewController) {
      source.show(destination, sender: nil)
    }
    
    func navigateToTrailers(source: ItemDetailViewController, destination: TrailersViewController) {
      source.present(destination, animated: true, completion: nil)
    }
    
    func navigateToAddToListOptions(source: ItemDetailViewController, destination: AddToListViewController) {
      source.present(destination, animated: false, completion: nil)
    }
    
    func navigateToWatchProviders(source: ItemDetailViewController, destination: WatchProvidersViewController) {
      source.present(destination, animated: false, completion: nil)
    }
    
    // MARK: Passing data
    
//    func passDataToCastDetail(source: ItemDetailDataStore, destination: inout CastDetailDataStore) {
//      destination.name = source.name
//    }
    
    func passDataToTrailers(source: ItemDetailDataStore, destination: inout TrailersDataStore) {
        destination.trailers = source.trailers
    }
    
    func passDataToAddToListOptions(source: ItemDetailDataStore, destination: inout AddToListDataStore) {
        destination.addToListDataModel = source.addToListDataModel
    }
    
    func passDataToWatchProviders(source: ItemDetailDataStore, destination: inout WatchProvidersDataStore) {
        destination.watchProviders = source.watchProviders
    }
}
