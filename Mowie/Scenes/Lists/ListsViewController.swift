//
//  ListsViewController.swift
//  Mowie
//
//  Created by Turan Yilmaz on 27.08.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListsDisplayLogic: AnyObject {
    func displayLists(viewModel: ListViewModel)
}

final class ListsViewController: UIViewController, ListsDisplayLogic {
    var interactor: ListsBusinessLogic?
    var router: (NSObjectProtocol & ListsRoutingLogic & ListsDataPassing)?
    
    @IBOutlet weak var listView: ListView!
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ListsInteractor()
        let presenter = ListsPresenter()
        let router = ListsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Navigation back button
        let backItem = UIBarButtonItem(title: nil)
        backItem.tintColor = UIColor(named: "mainOrange")
        self.navigationItem.backBarButtonItem = backItem
        navigationController?.navigationBar.overrideUserInterfaceStyle = .light
        
        interactor?.showLists()
        listView.didSelectCallback = listDidSelect(selectedList:)
    }
    
    func listDidSelect(selectedList: ListViewModelProtocol) {
        
        guard let selectedList = selectedList as? ListTableViewCellModel else {
            return
        }
        
        let pvc = PageViewController.instantiateFromStoryboard()
        pvc.title = selectedList.list.rawValue
        
        let movieListVC = ListViewController.instantiateFromStoryboard()
        movieListVC.itemType = .movie
        movieListVC.listType = selectedList.list
        
        let tvListVC = ListViewController.instantiateFromStoryboard()
        tvListVC.itemType = .tv
        tvListVC.listType = selectedList.list
        
        pvc.dataModel = (viewControllers: [movieListVC, tvListVC],
                         titles: ["MOVIE", "TV SERIES"])
        
        show(pvc, sender: nil)
    }
    
    // MARK: Display Logic
    
    func displayLists(viewModel: ListViewModel) {
        listView.viewModel = viewModel
    }
}
